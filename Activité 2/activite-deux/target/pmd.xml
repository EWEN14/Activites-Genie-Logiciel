<?xml version="1.0" encoding="UTF-8"?>
<pmd xmlns="http://pmd.sourceforge.net/report/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd" version="6.38.0" timestamp="2021-11-22T10:47:27.637">
<file name="C:\Users\Ewen CLEMENT\Documents\MASTER MIAGE\Ingénierie Logiciel (génie logiciel)\Activités Génie Logiciel\Activité 2\activite-deux\src\main\java\org\unc\nc\App.java">
<violation beginline="6" endline="15" begincolumn="18" endcolumn="1" rule="UseUtilityClass" ruleset="Design" package="org.unc.nc" class="App" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_design.html#useutilityclass" priority="3">
All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
</violation>
<violation beginline="6" endline="15" begincolumn="8" endcolumn="1" rule="ShortClassName" ruleset="Code Style" package="org.unc.nc" class="App" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like App
</violation>
<violation beginline="13" endline="13" begincolumn="5" endcolumn="22" rule="SystemPrintln" ruleset="Best Practices" package="org.unc.nc" class="App" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
</file>
<file name="C:\Users\Ewen CLEMENT\Documents\MASTER MIAGE\Ingénierie Logiciel (génie logiciel)\Activités Génie Logiciel\Activité 2\activite-deux\src\main\java\org\unc\nc\CalculUtils.java">
<violation beginline="32" endline="32" begincolumn="11" endcolumn="22" rule="AvoidFinalLocalVariable" ruleset="Code Style" package="org.unc.nc" class="CalculUtils" method="maFonction" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#avoidfinallocalvariable" priority="3">
Avoid using final local variables, turn them into fields
</violation>
<violation beginline="34" endline="34" begincolumn="7" endcolumn="31" rule="OnlyOneReturn" ruleset="Code Style" package="org.unc.nc" class="CalculUtils" method="maFonction" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
</file>
<file name="C:\Users\Ewen CLEMENT\Documents\MASTER MIAGE\Ingénierie Logiciel (génie logiciel)\Activités Génie Logiciel\Activité 2\activite-deux\src\main\java\org\unc\nc\Grille.java">
<violation beginline="36" endline="47" begincolumn="1" endcolumn="3" rule="CommentSize" ruleset="Documentation" package="org.unc.nc" class="Grille" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentsize" priority="3">
Comment is too large: Too many lines
</violation>
<violation beginline="48" endline="48" begincolumn="27" endcolumn="27" rule="ShortVariable" ruleset="Code Style" package="org.unc.nc" class="Grille" method="setValue" variable="x" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like x
</violation>
<violation beginline="48" endline="48" begincolumn="40" endcolumn="40" rule="ShortVariable" ruleset="Code Style" package="org.unc.nc" class="Grille" method="setValue" variable="y" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like y
</violation>
<violation beginline="59" endline="59" begincolumn="21" endcolumn="21" rule="ShortVariable" ruleset="Code Style" package="org.unc.nc" class="Grille" method="getValue" variable="x" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like x
</violation>
<violation beginline="59" endline="59" begincolumn="28" endcolumn="28" rule="ShortVariable" ruleset="Code Style" package="org.unc.nc" class="Grille" method="getValue" variable="y" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like y
</violation>
<violation beginline="68" endline="77" begincolumn="1" endcolumn="3" rule="CommentSize" ruleset="Documentation" package="org.unc.nc" class="Grille" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentsize" priority="3">
Comment is too large: Too many lines
</violation>
<violation beginline="76" endline="76" begincolumn="1" endcolumn="3" rule="CommentSize" ruleset="Documentation" package="org.unc.nc" class="Grille" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentsize" priority="3">
Comment is too large: Line too long
</violation>
<violation beginline="78" endline="78" begincolumn="24" endcolumn="24" rule="ShortVariable" ruleset="Code Style" package="org.unc.nc" class="Grille" method="possible" variable="x" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like x
</violation>
<violation beginline="78" endline="78" begincolumn="31" endcolumn="31" rule="ShortVariable" ruleset="Code Style" package="org.unc.nc" class="Grille" method="possible" variable="y" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like y
</violation>
</file>
<file name="C:\Users\Ewen CLEMENT\Documents\MASTER MIAGE\Ingénierie Logiciel (génie logiciel)\Activités Génie Logiciel\Activité 2\activite-deux\src\main\java\org\unc\nc\GrilleImpl.java">
<violation beginline="13" endline="13" begincolumn="3" endcolumn="18" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImpl" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Field comments are required
</violation>
<violation beginline="13" endline="13" begincolumn="12" endcolumn="17" rule="BeanMembersShouldSerialize" ruleset="Error Prone" package="org.unc.nc" class="GrilleImpl" variable="grille" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize" priority="3">
Found non-transient, non-static member. Please mark as transient or provide accessors.
</violation>
<violation beginline="13" endline="13" begincolumn="3" endcolumn="18" rule="CommentDefaultAccessModifier" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier" priority="3">
To avoid mistakes add a comment at the beginning of the grille field if you want a default access modifier
</violation>
<violation beginline="13" endline="13" begincolumn="3" endcolumn="18" rule="DefaultPackage" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#defaultpackage" priority="3">
Use explicit scoping instead of the default package private level
</violation>
<violation beginline="15" endline="15" begincolumn="10" endcolumn="28" rule="LongVariable" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" variable="caracteresPossibles" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#longvariable" priority="3">
Avoid excessively long variable names like caracteresPossibles
</violation>
<violation beginline="15" endline="15" begincolumn="3" endcolumn="29" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImpl" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Field comments are required
</violation>
<violation beginline="15" endline="15" begincolumn="10" endcolumn="28" rule="BeanMembersShouldSerialize" ruleset="Error Prone" package="org.unc.nc" class="GrilleImpl" variable="caracteresPossibles" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize" priority="3">
Found non-transient, non-static member. Please mark as transient or provide accessors.
</violation>
<violation beginline="15" endline="15" begincolumn="3" endcolumn="29" rule="CommentDefaultAccessModifier" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier" priority="3">
To avoid mistakes add a comment at the beginning of the caracteresPossibles field if you want a default access modifier
</violation>
<violation beginline="15" endline="15" begincolumn="3" endcolumn="29" rule="DefaultPackage" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#defaultpackage" priority="3">
Use explicit scoping instead of the default package private level
</violation>
<violation beginline="22" endline="22" begincolumn="21" endcolumn="33" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" method="GrilleImpl" variable="dimension" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'dimension' is not assigned and could be declared final
</violation>
<violation beginline="29" endline="29" begincolumn="12" endcolumn="24" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" method="GrilleImpl" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'grille' could be declared final
</violation>
<violation beginline="43" endline="45" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImpl" method="getDimension" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="43" endline="45" begincolumn="10" endcolumn="3" rule="MissingOverride" ruleset="Best Practices" package="org.unc.nc" class="GrilleImpl" method="getDimension" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getDimension()' is missing an @Override annotation.
</violation>
<violation beginline="47" endline="57" begincolumn="1" endcolumn="3" rule="CommentSize" ruleset="Documentation" package="org.unc.nc" class="GrilleImpl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentsize" priority="3">
Comment is too large: Too many lines
</violation>
<violation beginline="56" endline="56" begincolumn="1" endcolumn="3" rule="CommentSize" ruleset="Documentation" package="org.unc.nc" class="GrilleImpl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentsize" priority="3">
Comment is too large: Line too long
</violation>
<violation beginline="58" endline="58" begincolumn="28" endcolumn="28" rule="ShortVariable" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" method="setValue" variable="x" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like x
</violation>
<violation beginline="58" endline="58" begincolumn="35" endcolumn="35" rule="ShortVariable" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" method="setValue" variable="y" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like y
</violation>
<violation beginline="58" endline="58" begincolumn="38" endcolumn="47" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" method="setValue" variable="value" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'value' is not assigned and could be declared final
</violation>
<violation beginline="58" endline="58" begincolumn="24" endcolumn="28" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" method="setValue" variable="x" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'x' is not assigned and could be declared final
</violation>
<violation beginline="58" endline="58" begincolumn="31" endcolumn="35" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" method="setValue" variable="y" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'y' is not assigned and could be declared final
</violation>
<violation beginline="58" endline="85" begincolumn="10" endcolumn="3" rule="CyclomaticComplexity" ruleset="Design" package="org.unc.nc" class="GrilleImpl" method="setValue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'setValue(int, int, char)' has a cyclomatic complexity of 10.
</violation>
<violation beginline="58" endline="85" begincolumn="10" endcolumn="3" rule="MissingOverride" ruleset="Best Practices" package="org.unc.nc" class="GrilleImpl" method="setValue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'setValue(int, int, char)' is missing an @Override annotation.
</violation>
<violation beginline="61" endline="61" begincolumn="1" endcolumn="3" rule="CommentSize" ruleset="Documentation" package="org.unc.nc" class="GrilleImpl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentsize" priority="3">
Comment is too large: Line too long
</violation>
<violation beginline="63" endline="63" begincolumn="1" endcolumn="3" rule="CommentSize" ruleset="Documentation" package="org.unc.nc" class="GrilleImpl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentsize" priority="3">
Comment is too large: Line too long
</violation>
<violation beginline="70" endline="70" begincolumn="12" endcolumn="23" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" method="setValue" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'chars' could be declared final
</violation>
<violation beginline="79" endline="82" begincolumn="7" endcolumn="5" rule="AvoidThrowingNewInstanceOfSameException" ruleset="Design" package="org.unc.nc" class="GrilleImpl" method="setValue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_design.html#avoidthrowingnewinstanceofsameexception" priority="3">
A catch statement that catches an exception only to wrap it in a new instance of the same type of exception and throw it should be avoided
</violation>
<violation beginline="81" endline="81" begincolumn="7" endcolumn="54" rule="PreserveStackTrace" ruleset="Best Practices" package="org.unc.nc" class="GrilleImpl" method="setValue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#preservestacktrace" priority="3">
New exception is thrown in catch block, original stack trace may be lost
</violation>
<violation beginline="82" endline="84" begincolumn="7" endcolumn="5" rule="AvoidThrowingNewInstanceOfSameException" ruleset="Design" package="org.unc.nc" class="GrilleImpl" method="setValue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_design.html#avoidthrowingnewinstanceofsameexception" priority="3">
A catch statement that catches an exception only to wrap it in a new instance of the same type of exception and throw it should be avoided
</violation>
<violation beginline="83" endline="83" begincolumn="7" endcolumn="61" rule="PreserveStackTrace" ruleset="Best Practices" package="org.unc.nc" class="GrilleImpl" method="setValue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#preservestacktrace" priority="3">
New exception is thrown in catch block, original stack trace may be lost
</violation>
<violation beginline="95" endline="95" begincolumn="28" endcolumn="28" rule="ShortVariable" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" method="getValue" variable="x" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like x
</violation>
<violation beginline="95" endline="95" begincolumn="35" endcolumn="35" rule="ShortVariable" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" method="getValue" variable="y" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like y
</violation>
<violation beginline="95" endline="95" begincolumn="24" endcolumn="28" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" method="getValue" variable="x" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'x' is not assigned and could be declared final
</violation>
<violation beginline="95" endline="95" begincolumn="31" endcolumn="35" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" method="getValue" variable="y" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'y' is not assigned and could be declared final
</violation>
<violation beginline="95" endline="101" begincolumn="10" endcolumn="3" rule="MissingOverride" ruleset="Best Practices" package="org.unc.nc" class="GrilleImpl" method="getValue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'getValue(int, int)' is missing an @Override annotation.
</violation>
<violation beginline="108" endline="116" begincolumn="10" endcolumn="3" rule="MissingOverride" ruleset="Best Practices" package="org.unc.nc" class="GrilleImpl" method="complete" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'complete()' is missing an @Override annotation.
</violation>
<violation beginline="110" endline="110" begincolumn="10" endcolumn="21" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" method="complete" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'ligne' could be declared final
</violation>
<violation beginline="112" endline="112" begincolumn="9" endcolumn="21" rule="OnlyOneReturn" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" method="complete" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="118" endline="126" begincolumn="1" endcolumn="3" rule="CommentSize" ruleset="Documentation" package="org.unc.nc" class="GrilleImpl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentsize" priority="3">
Comment is too large: Too many lines
</violation>
<violation beginline="119" endline="119" begincolumn="1" endcolumn="3" rule="CommentSize" ruleset="Documentation" package="org.unc.nc" class="GrilleImpl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentsize" priority="3">
Comment is too large: Line too long
</violation>
<violation beginline="125" endline="125" begincolumn="1" endcolumn="3" rule="CommentSize" ruleset="Documentation" package="org.unc.nc" class="GrilleImpl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentsize" priority="3">
Comment is too large: Line too long
</violation>
<violation beginline="127" endline="127" begincolumn="31" endcolumn="31" rule="ShortVariable" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" method="possible" variable="x" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like x
</violation>
<violation beginline="127" endline="127" begincolumn="38" endcolumn="38" rule="ShortVariable" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" method="possible" variable="y" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like y
</violation>
<violation beginline="127" endline="127" begincolumn="41" endcolumn="50" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" method="possible" variable="value" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'value' is not assigned and could be declared final
</violation>
<violation beginline="127" endline="127" begincolumn="27" endcolumn="31" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" method="possible" variable="x" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'x' is not assigned and could be declared final
</violation>
<violation beginline="127" endline="127" begincolumn="34" endcolumn="38" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="org.unc.nc" class="GrilleImpl" method="possible" variable="y" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'y' is not assigned and could be declared final
</violation>
<violation beginline="127" endline="140" begincolumn="10" endcolumn="3" rule="MissingOverride" ruleset="Best Practices" package="org.unc.nc" class="GrilleImpl" method="possible" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'possible(int, int, char)' is missing an @Override annotation.
</violation>
<violation beginline="134" endline="134" begincolumn="1" endcolumn="3" rule="CommentSize" ruleset="Documentation" package="org.unc.nc" class="GrilleImpl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentsize" priority="3">
Comment is too large: Line too long
</violation>
</file>
<file name="C:\Users\Ewen CLEMENT\Documents\MASTER MIAGE\Ingénierie Logiciel (génie logiciel)\Activités Génie Logiciel\Activité 2\activite-deux\src\main\java\org\unc\nc\exceptions\CaractereInterditException.java">
<violation beginline="3" endline="8" begincolumn="8" endcolumn="1" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc.exceptions" class="CaractereInterditException" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Class comments are required
</violation>
<violation beginline="3" endline="8" begincolumn="8" endcolumn="1" rule="MissingSerialVersionUID" ruleset="Error Prone" package="org.unc.nc.exceptions" class="CaractereInterditException" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_errorprone.html#missingserialversionuid" priority="3">
Classes implementing Serializable should set a serialVersionUID
</violation>
<violation beginline="5" endline="5" begincolumn="37" endcolumn="55" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="org.unc.nc.exceptions" class="CaractereInterditException" method="CaractereInterditException" variable="errorMessage" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'errorMessage' is not assigned and could be declared final
</violation>
<violation beginline="5" endline="7" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc.exceptions" class="CaractereInterditException" method="CaractereInterditException" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
</file>
<file name="C:\Users\Ewen CLEMENT\Documents\MASTER MIAGE\Ingénierie Logiciel (génie logiciel)\Activités Génie Logiciel\Activité 2\activite-deux\src\main\java\org\unc\nc\exceptions\HorsBornesException.java">
<violation beginline="3" endline="8" begincolumn="8" endcolumn="1" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc.exceptions" class="HorsBornesException" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Class comments are required
</violation>
<violation beginline="3" endline="8" begincolumn="8" endcolumn="1" rule="MissingSerialVersionUID" ruleset="Error Prone" package="org.unc.nc.exceptions" class="HorsBornesException" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_errorprone.html#missingserialversionuid" priority="3">
Classes implementing Serializable should set a serialVersionUID
</violation>
<violation beginline="5" endline="5" begincolumn="30" endcolumn="48" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="org.unc.nc.exceptions" class="HorsBornesException" method="HorsBornesException" variable="errorMessage" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'errorMessage' is not assigned and could be declared final
</violation>
<violation beginline="5" endline="7" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc.exceptions" class="HorsBornesException" method="HorsBornesException" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
</file>
<file name="C:\Users\Ewen CLEMENT\Documents\MASTER MIAGE\Ingénierie Logiciel (génie logiciel)\Activités Génie Logiciel\Activité 2\activite-deux\src\main\java\org\unc\nc\exceptions\ValeurImpossibleException.java">
<violation beginline="3" endline="8" begincolumn="8" endcolumn="1" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc.exceptions" class="ValeurImpossibleException" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Class comments are required
</violation>
<violation beginline="3" endline="8" begincolumn="8" endcolumn="1" rule="MissingSerialVersionUID" ruleset="Error Prone" package="org.unc.nc.exceptions" class="ValeurImpossibleException" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_errorprone.html#missingserialversionuid" priority="3">
Classes implementing Serializable should set a serialVersionUID
</violation>
<violation beginline="5" endline="5" begincolumn="36" endcolumn="54" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="org.unc.nc.exceptions" class="ValeurImpossibleException" method="ValeurImpossibleException" variable="errorMessage" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'errorMessage' is not assigned and could be declared final
</violation>
<violation beginline="5" endline="7" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc.exceptions" class="ValeurImpossibleException" method="ValeurImpossibleException" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
</file>
<file name="C:\Users\Ewen CLEMENT\Documents\MASTER MIAGE\Ingénierie Logiciel (génie logiciel)\Activités Génie Logiciel\Activité 2\activite-deux\src\test\java\org\unc\nc\AppTest.java">
<violation beginline="10" endline="18" begincolumn="8" endcolumn="1" rule="AtLeastOneConstructor" ruleset="Code Style" package="org.unc.nc" class="AppTest" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#atleastoneconstructor" priority="3">
Each class should declare at least one constructor
</violation>
<violation beginline="10" endline="18" begincolumn="8" endcolumn="1" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="AppTest" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="15" endline="17" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="AppTest" method="shouldAnswerWithTrue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="16" endline="16" begincolumn="5" endcolumn="39" rule="UnnecessaryBooleanAssertion" ruleset="Error Prone" package="org.unc.nc" class="AppTest" method="shouldAnswerWithTrue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_errorprone.html#unnecessarybooleanassertion" priority="3">
assertTrue(true) or similar statements are unnecessary
</violation>
</file>
<file name="C:\Users\Ewen CLEMENT\Documents\MASTER MIAGE\Ingénierie Logiciel (génie logiciel)\Activités Génie Logiciel\Activité 2\activite-deux\src\test\java\org\unc\nc\CalculUtilsTest.java">
<violation beginline="10" endline="42" begincolumn="8" endcolumn="1" rule="AtLeastOneConstructor" ruleset="Code Style" package="org.unc.nc" class="CalculUtilsTest" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#atleastoneconstructor" priority="3">
Each class should declare at least one constructor
</violation>
<violation beginline="10" endline="42" begincolumn="8" endcolumn="1" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="CalculUtilsTest" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="12" endline="14" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="CalculUtilsTest" method="testSomme" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="12" endline="14" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="CalculUtilsTest" method="testSomme" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="17" endline="19" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="CalculUtilsTest" method="testSommeFalse" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="17" endline="19" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="CalculUtilsTest" method="testSommeFalse" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="22" endline="24" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="CalculUtilsTest" method="testMaFonction" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="22" endline="24" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="CalculUtilsTest" method="testMaFonction" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="27" endline="29" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="CalculUtilsTest" method="testMaFonction2" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="27" endline="29" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="CalculUtilsTest" method="testMaFonction2" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="32" endline="34" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="CalculUtilsTest" method="testDivision" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="32" endline="34" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="CalculUtilsTest" method="testDivision" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="37" endline="41" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="CalculUtilsTest" method="testDivisionZero" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="37" endline="41" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="CalculUtilsTest" method="testDivisionZero" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="37" endline="41" begincolumn="10" endcolumn="3" rule="JUnitTestContainsTooManyAsserts" ruleset="Best Practices" package="org.unc.nc" class="CalculUtilsTest" method="testDivisionZero" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junittestcontainstoomanyasserts" priority="3">
Unit tests should not contain more than 1 assert(s).
</violation>
<violation beginline="39" endline="39" begincolumn="55" endcolumn="76" rule="LawOfDemeter" ruleset="Design" package="org.unc.nc" class="CalculUtilsTest" method="testDivisionZero" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
</file>
<file name="C:\Users\Ewen CLEMENT\Documents\MASTER MIAGE\Ingénierie Logiciel (génie logiciel)\Activités Génie Logiciel\Activité 2\activite-deux\src\test\java\org\unc\nc\GrilleImplTest.java">
<violation beginline="15" endline="169" begincolumn="8" endcolumn="1" rule="AtLeastOneConstructor" ruleset="Code Style" package="org.unc.nc" class="GrilleImplTest" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#atleastoneconstructor" priority="3">
Each class should declare at least one constructor
</violation>
<violation beginline="15" endline="169" begincolumn="8" endcolumn="1" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="15" endline="169" begincolumn="29" endcolumn="1" rule="TooManyMethods" ruleset="Design" package="org.unc.nc" class="GrilleImplTest" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_design.html#toomanymethods" priority="3">
This class has too many methods, consider refactoring it.
</violation>
<violation beginline="19" endline="19" begincolumn="3" endcolumn="44" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Field comments are required
</violation>
<violation beginline="19" endline="19" begincolumn="14" endcolumn="23" rule="BeanMembersShouldSerialize" ruleset="Error Prone" package="org.unc.nc" class="GrilleImplTest" variable="grilleImpl" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize" priority="3">
Found non-transient, non-static member. Please mark as transient or provide accessors.
</violation>
<violation beginline="19" endline="19" begincolumn="3" endcolumn="44" rule="CommentDefaultAccessModifier" ruleset="Code Style" package="org.unc.nc" class="GrilleImplTest" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier" priority="3">
To avoid mistakes add a comment at the beginning of the grilleImpl field if you want a default access modifier
</violation>
<violation beginline="19" endline="19" begincolumn="3" endcolumn="44" rule="DefaultPackage" ruleset="Code Style" package="org.unc.nc" class="GrilleImplTest" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#defaultpackage" priority="3">
Use explicit scoping instead of the default package private level
</violation>
<violation beginline="21" endline="21" begincolumn="1" endcolumn="3" rule="CommentSize" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentsize" priority="3">
Comment is too large: Line too long
</violation>
<violation beginline="22" endline="22" begincolumn="3" endcolumn="44" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Field comments are required
</violation>
<violation beginline="22" endline="22" begincolumn="3" endcolumn="44" rule="CommentDefaultAccessModifier" ruleset="Code Style" package="org.unc.nc" class="GrilleImplTest" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier" priority="3">
To avoid mistakes add a comment at the beginning of the grilleDim4 field if you want a default access modifier
</violation>
<violation beginline="22" endline="22" begincolumn="3" endcolumn="44" rule="DefaultPackage" ruleset="Code Style" package="org.unc.nc" class="GrilleImplTest" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#defaultpackage" priority="3">
Use explicit scoping instead of the default package private level
</violation>
<violation beginline="23" endline="23" begincolumn="3" endcolumn="46" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Field comments are required
</violation>
<violation beginline="23" endline="23" begincolumn="3" endcolumn="46" rule="CommentDefaultAccessModifier" ruleset="Code Style" package="org.unc.nc" class="GrilleImplTest" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier" priority="3">
To avoid mistakes add a comment at the beginning of the grilleDim16 field if you want a default access modifier
</violation>
<violation beginline="23" endline="23" begincolumn="3" endcolumn="46" rule="DefaultPackage" ruleset="Code Style" package="org.unc.nc" class="GrilleImplTest" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#defaultpackage" priority="3">
Use explicit scoping instead of the default package private level
</violation>
<violation beginline="24" endline="24" begincolumn="3" endcolumn="46" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Field comments are required
</violation>
<violation beginline="24" endline="24" begincolumn="3" endcolumn="46" rule="CommentDefaultAccessModifier" ruleset="Code Style" package="org.unc.nc" class="GrilleImplTest" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier" priority="3">
To avoid mistakes add a comment at the beginning of the grilleDim25 field if you want a default access modifier
</violation>
<violation beginline="24" endline="24" begincolumn="3" endcolumn="46" rule="DefaultPackage" ruleset="Code Style" package="org.unc.nc" class="GrilleImplTest" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#defaultpackage" priority="3">
Use explicit scoping instead of the default package private level
</violation>
<violation beginline="27" endline="39" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testGrille" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="27" endline="39" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" method="testGrille" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="29" endline="29" begincolumn="5" endcolumn="40" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="org.unc.nc" class="GrilleImplTest" method="testGrille" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'grilleTest' could be declared final
</violation>
<violation beginline="31" endline="31" begincolumn="10" endcolumn="22" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="org.unc.nc" class="GrilleImplTest" method="testGrille" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'grille' could be declared final
</violation>
<violation beginline="35" endline="35" begincolumn="5" endcolumn="41" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="org.unc.nc" class="GrilleImplTest" method="testGrille" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'grille' could be declared final
</violation>
<violation beginline="42" endline="46" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testGrilleBadDimension" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="42" endline="46" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" method="testGrilleBadDimension" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="42" endline="46" begincolumn="10" endcolumn="3" rule="JUnitTestContainsTooManyAsserts" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testGrilleBadDimension" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junittestcontainstoomanyasserts" priority="3">
Unit tests should not contain more than 1 assert(s).
</violation>
<violation beginline="44" endline="44" begincolumn="88" endcolumn="109" rule="LawOfDemeter" ruleset="Design" package="org.unc.nc" class="GrilleImplTest" method="testGrilleBadDimension" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="45" endline="45" begincolumn="13" endcolumn="66" rule="AvoidDuplicateLiterals" ruleset="Error Prone" package="org.unc.nc" class="GrilleImplTest" method="testGrilleBadDimension" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_errorprone.html#avoidduplicateliterals" priority="3">
The String literal "Le message d'erreur renvoyé n'est pas celui attendu." appears 8 times in this file; the first occurrence is on line 45
</violation>
<violation beginline="49" endline="51" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testGetDimension" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="49" endline="51" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" method="testGetDimension" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="50" endline="50" begincolumn="5" endcolumn="16" rule="JUnitAssertionsShouldIncludeMessage" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testGetDimension" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage" priority="3">
JUnit assertions should include a message
</violation>
<violation beginline="54" endline="60" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testSetValueGood" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="54" endline="60" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" method="testSetValueGood" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="59" endline="59" begincolumn="5" endcolumn="16" rule="JUnitAssertionsShouldIncludeMessage" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testSetValueGood" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage" priority="3">
JUnit assertions should include a message
</violation>
<violation beginline="63" endline="74" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testSetValueAlreadyInRow" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="63" endline="74" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" method="testSetValueAlreadyInRow" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="63" endline="74" begincolumn="10" endcolumn="3" rule="JUnitTestContainsTooManyAsserts" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testSetValueAlreadyInRow" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junittestcontainstoomanyasserts" priority="3">
Unit tests should not contain more than 1 assert(s).
</violation>
<violation beginline="72" endline="72" begincolumn="82" endcolumn="103" rule="LawOfDemeter" ruleset="Design" package="org.unc.nc" class="GrilleImplTest" method="testSetValueAlreadyInRow" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="77" endline="88" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testSetValueAlreadyInColumn" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="77" endline="88" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" method="testSetValueAlreadyInColumn" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="77" endline="88" begincolumn="10" endcolumn="3" rule="JUnitTestContainsTooManyAsserts" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testSetValueAlreadyInColumn" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junittestcontainstoomanyasserts" priority="3">
Unit tests should not contain more than 1 assert(s).
</violation>
<violation beginline="86" endline="86" begincolumn="84" endcolumn="105" rule="LawOfDemeter" ruleset="Design" package="org.unc.nc" class="GrilleImplTest" method="testSetValueAlreadyInColumn" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="91" endline="100" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testSetValueHorsBornesLigne" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="91" endline="100" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" method="testSetValueHorsBornesLigne" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="91" endline="100" begincolumn="10" endcolumn="3" rule="JUnitTestContainsTooManyAsserts" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testSetValueHorsBornesLigne" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junittestcontainstoomanyasserts" priority="3">
Unit tests should not contain more than 1 assert(s).
</violation>
<violation beginline="98" endline="98" begincolumn="92" endcolumn="113" rule="LawOfDemeter" ruleset="Design" package="org.unc.nc" class="GrilleImplTest" method="testSetValueHorsBornesLigne" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="98" endline="98" begincolumn="18" endcolumn="89" rule="AvoidDuplicateLiterals" ruleset="Error Prone" package="org.unc.nc" class="GrilleImplTest" method="testSetValueHorsBornesLigne" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_errorprone.html#avoidduplicateliterals" priority="3">
The String literal "Au moins l'une des deux coordonnées dépasse la dimension de la grille." appears 4 times in this file; the first occurrence is on line 98
</violation>
<violation beginline="103" endline="112" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testSetValueHorsBornesColonne" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="103" endline="112" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" method="testSetValueHorsBornesColonne" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="103" endline="112" begincolumn="10" endcolumn="3" rule="JUnitTestContainsTooManyAsserts" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testSetValueHorsBornesColonne" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junittestcontainstoomanyasserts" priority="3">
Unit tests should not contain more than 1 assert(s).
</violation>
<violation beginline="110" endline="110" begincolumn="92" endcolumn="113" rule="LawOfDemeter" ruleset="Design" package="org.unc.nc" class="GrilleImplTest" method="testSetValueHorsBornesColonne" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="115" endline="124" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testSetValueCaractereInterdit" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="115" endline="124" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" method="testSetValueCaractereInterdit" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="115" endline="124" begincolumn="10" endcolumn="3" rule="JUnitTestContainsTooManyAsserts" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testSetValueCaractereInterdit" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junittestcontainstoomanyasserts" priority="3">
Unit tests should not contain more than 1 assert(s).
</violation>
<violation beginline="122" endline="122" begincolumn="72" endcolumn="93" rule="LawOfDemeter" ruleset="Design" package="org.unc.nc" class="GrilleImplTest" method="testSetValueCaractereInterdit" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="127" endline="130" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testGetValue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="127" endline="130" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" method="testGetValue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="133" endline="141" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testGetValueHorsBornesLigne" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="133" endline="141" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" method="testGetValueHorsBornesLigne" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="133" endline="141" begincolumn="10" endcolumn="3" rule="JUnitTestContainsTooManyAsserts" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testGetValueHorsBornesLigne" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junittestcontainstoomanyasserts" priority="3">
Unit tests should not contain more than 1 assert(s).
</violation>
<violation beginline="139" endline="139" begincolumn="92" endcolumn="113" rule="LawOfDemeter" ruleset="Design" package="org.unc.nc" class="GrilleImplTest" method="testGetValueHorsBornesLigne" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="144" endline="152" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testGetValueHorsBornesColonne" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="144" endline="152" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" method="testGetValueHorsBornesColonne" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="144" endline="152" begincolumn="10" endcolumn="3" rule="JUnitTestContainsTooManyAsserts" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testGetValueHorsBornesColonne" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junittestcontainstoomanyasserts" priority="3">
Unit tests should not contain more than 1 assert(s).
</violation>
<violation beginline="150" endline="150" begincolumn="92" endcolumn="113" rule="LawOfDemeter" ruleset="Design" package="org.unc.nc" class="GrilleImplTest" method="testGetValueHorsBornesColonne" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="155" endline="162" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testCompleteTrue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="155" endline="162" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" method="testCompleteTrue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="156" endline="156" begincolumn="1" endcolumn="3" rule="CommentSize" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentsize" priority="3">
Comment is too large: Line too long
</violation>
<violation beginline="157" endline="157" begincolumn="10" endcolumn="22" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="org.unc.nc" class="GrilleImplTest" method="testCompleteTrue" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'grille' could be declared final
</violation>
<violation beginline="161" endline="161" begincolumn="5" endcolumn="14" rule="JUnitAssertionsShouldIncludeMessage" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testCompleteTrue" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage" priority="3">
JUnit assertions should include a message
</violation>
<violation beginline="165" endline="168" begincolumn="10" endcolumn="3" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testCompleteFalse" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="165" endline="168" begincolumn="10" endcolumn="3" rule="CommentRequired" ruleset="Documentation" package="org.unc.nc" class="GrilleImplTest" method="testCompleteFalse" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_documentation.html#commentrequired" priority="3">
Public method and constructor comments are required
</violation>
<violation beginline="167" endline="167" begincolumn="5" endcolumn="15" rule="JUnitAssertionsShouldIncludeMessage" ruleset="Best Practices" package="org.unc.nc" class="GrilleImplTest" method="testCompleteFalse" externalInfoUrl="https://pmd.github.io/pmd-6.38.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage" priority="3">
JUnit assertions should include a message
</violation>
</file>
</pmd>
